package com.restaurant.semillero.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.restaurant.semillero.repository.IUserJpaRepository;
import com.restaurant.semillero.service.UserServiceImplement;

import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/restaurant_users")
public class UserController {
	
	@Autowired
	private IUserJpaRepository uJpaRepository;
	private UserServiceImplement uServiceImplement;

	public UserController(IUserJpaRepository uJpaRepository, UserServiceImplement uServiceImplement) {
		super();
		this.uJpaRepository = uJpaRepository;
		this.uServiceImplement = uServiceImplement;
	}


	@ApiOperation(value="Method that returns users data through method HTTP.GET. This is how all users come.",
			response = Integer.class)	
	@GetMapping	
	public List<UserDTO> getAllUsers( ){
		return personService.getAllPeople();
	}
	
	
	@ApiOperation(value="Method that returns users data through method HTTP.GET using a specific parameter for a single user.",
			response = Integer.class, tags="id_person simple way. 'http://localhost:8080/Person/find/1'")
	@GetMapping("find/{idPerson}")
	public PersonDTO getAllPeople2(@PathVariable("idPerson") int id){
		return personService.getAllPeople2(id);
	}
	
	@ApiOperation(value="Method that returns users data through method HTTP.GET using a specific parameter as a query for a single user.",
			response = Integer.class, tags="id_person using a query. 'http://localhost:8080/Person/find2?id=1'")
	@GetMapping("find2{idPerson}")
	public PersonDTO getAllPeople3(@RequestParam(name="id", required=true) int id){
		return personService.getAllPeople2(id);
	
		
		
		

	@ApiOperation(value="Method that returns users data through method HTTP.POST.",
			response = Integer.class)
	@PostMapping
	public @ResponseBody PersonDTO createPerson(@RequestBody() PersonDTO personDTO) {
		return personService.createPerson(personDTO);
	}
	
}
